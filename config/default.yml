Ezcater/RailsConfiguration:
  Description: 'Enforce the use of `Rails.configuration` instead of `Rails.application.config`.'
  Enabled: true

Ezcater/RailsEnv:
  Description: 'Enforce the use of `Rails.configuration.x.<foo>` instead of checking `Rails.env`.'
  Enabled: true
  Exclude:
    - "config/**/*"
    - "spec/rails_helper.rb"
    - "db/**/*"

Ezcater/DirectEnvCheck:
  Description: 'Enforce the use of `Rails.configuration.x.<foo>` instead of checking `ENV`.'
  Enabled: true
  Exclude:
    - "bin/**/*"
    - "config/**/*"
    - "spec/rails_helper.rb"
    - "db/**/*"

Ezcater/RspecDotNotSelfDot:
  Description: 'Enforce ".<class method>" instead of "self.<class method>" for example group description.'
  Enabled: true
  Include:
    - '**/*_spec.rb'

Ezcater/RspecRequireBrowserMock:
  Description: 'Enforce use of `mock_ezcater_app`, `mock_chrome_browser` & `mock_custom_browser` helpers instead of mocking `Browser` or `EzBrowser` directly.'
  Enabled: true
  Include:
    - '**/*_spec.rb'

Ezcater/RspecRequireFeatureFlagMock:
  Description: 'Enforce use of `mock_feature_flag` helpers instead of mocking `FeatureFlag.is_active?` directly.'
  Enabled: true
  Include:
    - '**/*_spec.rb'

Ezcater/RspecRequireHttpStatusMatcher:
  Description: 'Use the HTTP status code matcher, like `expect(response).to have_http_status :bad_request`, rather than `expect(response.code).to eq 400`'
  Enabled: true
  Include:
    - '**/*_spec.rb'

Ezcater/RequireGqlErrorHelpers:
  Description: 'Use the helpers provided by `GQLErrors` instead of raising `GraphQL::ExecutionError` directly.'
  Enabled: true

Ezcater/StyleDig:
  Description: 'Recommend `dig` for deeply nested access.'
  Enabled: true
  AutoCorrect: false
